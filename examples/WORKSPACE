workspace(name = "examples")

load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")
load("@bazel_tools//tools/build_defs/repo:git.bzl", "git_repository")

########################
# MYPY SUPPORT
########################

local_repository(
    name = "mypy_integration",
    path = "../",
)

load(
    "@mypy_integration//repositories:repositories.bzl",
    mypy_integration_repositories = "repositories",
)

mypy_integration_repositories()

load("@mypy_integration//:config.bzl", "mypy_configuration")

mypy_configuration("//tools/typing:mypy.ini")

load("@mypy_integration//repositories:deps.bzl", mypy_integration_deps = "deps")

mypy_integration_deps("//tools/typing:mypy_version.txt")

load("@mypy_integration//repositories:pip_repositories.bzl", "pip_deps")

pip_deps()

########################
# PYTHON SUPPORT
########################
rules_python_version = "7b222cfdb4e59b9fd2a609e1fbb233e94fdcde7c"

http_archive(
    name = "rules_python",
    sha256 = "d2865e2ce23ee217aaa408ddaa024ca472114a6f250b46159d27de05530c75e3",
    strip_prefix = "rules_python-{version}".format(version = rules_python_version),
    url = "https://github.com/bazelbuild/rules_python/archive/{version}.tar.gz".format(version = rules_python_version),
)

load("@rules_python//python:repositories.bzl", "py_repositories")

py_repositories()

# Only needed if using the packaging rules.
load("@rules_python//python:pip.bzl", "pip_repositories")

pip_repositories()

load("@rules_python//python:pip.bzl", "pip_import")

pip_import(
    # or pip3_import
    name = "my_deps",
    python_interpreter = "python3",
    requirements = "//third_party:requirements.txt",
)

load("@my_deps//:requirements.bzl", "pip_install")

pip_install()

# THIRD-PARTY PYTHON
########################

rules_python_external_version = "0e24cd9e051da859745c99e6fe31c833607898b6"

http_archive(
    name = "rules_python_external",
    sha256 = "53d938572503e46fd1fe5023c804e3e6ed4dafd5d1f0a03203bfc5e62d8a89db",
    strip_prefix = "rules_python_external-{version}".format(version = rules_python_external_version),
    url = "https://github.com/dillon-giacoppo/rules_python_external/archive/{version}.zip".format(version = rules_python_external_version),
)

load("@rules_python_external//:defs.bzl", "pip_repository")

pip_repository(
    name = "my_deps",
    requirements = "//third_party:requirements.txt",
)

########################
# OTHER
########################

load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

http_archive(
    name = "bazel_skylib",
    sha256 = "97e70364e9249702246c0e9444bccdc4b847bed1eb03c5a3ece4f83dfe6abc44",
    urls = [
        "https://mirror.bazel.build/github.com/bazelbuild/bazel-skylib/releases/download/1.0.2/bazel-skylib-1.0.2.tar.gz",
        "https://github.com/bazelbuild/bazel-skylib/releases/download/1.0.2/bazel-skylib-1.0.2.tar.gz",
    ],
)

load("@bazel_skylib//:workspace.bzl", "bazel_skylib_workspace")

bazel_skylib_workspace()

http_archive(
    name = "linting_system",
    sha256 = "8da0fedcfd5ebad2ff204caf62abfe5304f32280542128cccc044f56f0d7138d",
    strip_prefix = "bazel-linting-system-0.2.1",
    url = "https://github.com/thundergolfer/bazel-linting-system/archive/v0.2.1.zip",
)
